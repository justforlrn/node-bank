<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="stylesheets/style.css" />
    <link rel="stylesheet" href="stylesheets/bootstrap-4.5.2-dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="stylesheets/fontawesome-free-5.15.0-web/css/all.css" />
    <script src="javascripts/main.js"></script>
    <!-- Jquery -->
    <script src="javascripts/jquery-3.3.1.min.js"></script>
    <!-- Bootstrap -->
    <script src="stylesheets/bootstrap-4.5.2-dist/js/bootstrap.min.js"></script>
    <!-- Font awesome -->
    <script src="javascripts/fontawesome.min.js"></script>
    <title>
        <%= title %>
    </title>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
</head>

<body class="bg-primary">
    <div class="login-form-area mt-5 mb-5">
        <div class="container">
            <div class="row">
                <div class="login-form-container mx-auto bg-light">
                    <h2 class="justify-content-center d-flex mb-3">Đăng ký</h2>
                    <div class="login-form bg-light">
                        <form method="post">
                            <input type="number" class="form-control mb-1" name="bank_number" id="bank_number"
                                placeholder="Bank number" onblur="getHolder()" required>
                            <input type="text" class="form-control mb-1" name="bank_holder" id="bank_holder"
                                placeholder="Bank Holder" disabled>
                            <input type="number" class="form-control mb-1" name="transfer_value" id="transfer_value"
                                placeholder="Value" required>
                            <input type="number" class="form-control mb-1" name="otp" id="otp" placeholder="OTP"
                                required>

                            <% if (hasError) { errors.map(function(error) { %>
                                <label style="color:red !important; display: inherit !important; max-width:400px">
                                    <%= error %>
                                </label>
                                <% }) } %>

                                <% if (transfer) { transfers.map(function(trans) { %>
                                    <label style="color:red !important; display: inherit !important; max-width:400px">
                                        <%= trans %>
                                    </label>
                                    <% }) } %>

                                    <div class="button-box mt-1"></div>
                                    <button type="submit" class="btn btn-primary float-right mt-2">Submit</button>
                    </div>
                    </form>
                </div>
            </div>
            <div class="row">
                <div class="table-responsive">
                  <table class="table table-hover">
                    <thead>
                      <tr>
                        <th>#</th>
                        <th>Table heading</th>
                        <th>Table heading</th>
                        <th>Table heading</th>
                        <th>Table heading</th>
                        <th>Table heading</th>
                        <th>Table heading</th>
                      </tr>
                    </thead>
                    <tbody id="myTable">
                      <tr>
                        <td>1</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                      <tr>
                        <td>2</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                      <tr>
                        <td>3</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                      <tr>
                        <td>4</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                      <tr class="success">
                        <td>5</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                      <tr>
                        <td>6</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                      <tr>
                        <td>7</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                       <tr>
                        <td>8</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                      <tr>
                        <td>9</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                      <tr>
                        <td>10</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                        <td>Table cell</td>
                      </tr>
                    </tbody>
                  </table>   
                </div>
                <div class="col-md-12 text-center">
                <ul class="pagination pagination-lg pager" id="myPager"></ul>
                </div>
              </div>
        </div>
    </div>
    </div>
    <!-- Javascript/jquery files -->
    <!-- Main javascript -->
    <script>

        function getHolder() {
            var holder = document.getElementById("bank_holder");
            var bankNumber = document.getElementById("bank_number");
            axios
                .get(
                    `http://localhost:3000/transfer/get-holder?bank_number=${bankNumber.value}`
                )
                .then((res) => {
                    if (!res.data.hasError) {
                        holder.value = res.data.holder
                        bankNumber.setCustomValidity('');
                    } else {
                        holder.value = "";
                        bankNumber.setCustomValidity('Wrong bank number');
                    }
                })
                .catch((err) => {
                    console.log(err);
                });
        };

        $.fn.pageMe = function(opts){
    var $this = this,
        defaults = {
            perPage: 7,
            showPrevNext: false,
            hidePageNumbers: false
        },
        settings = $.extend(defaults, opts);
    
    var listElement = $this;
    var perPage = settings.perPage; 
    var children = listElement.children();
    var pager = $('.pager');
    
    if (typeof settings.childSelector!="undefined") {
        children = listElement.find(settings.childSelector);
    }
    
    if (typeof settings.pagerSelector!="undefined") {
        pager = $(settings.pagerSelector);
    }
    
    var numItems = children.size();
    var numPages = Math.ceil(numItems/perPage);

    pager.data("curr",0);
    
    if (settings.showPrevNext){
        $('<li><a href="#" class="prev_link">«</a></li>').appendTo(pager);
    }
    
    var curr = 0;
    while(numPages > curr && (settings.hidePageNumbers==false)){
        $('<li><a href="#" class="page_link">'+(curr+1)+'</a></li>').appendTo(pager);
        curr++;
    }
    
    if (settings.showPrevNext){
        $('<li><a href="#" class="next_link">»</a></li>').appendTo(pager);
    }
    
    pager.find('.page_link:first').addClass('active');
    pager.find('.prev_link').hide();
    if (numPages<=1) {
        pager.find('.next_link').hide();
    }
      pager.children().eq(1).addClass("active");
    
    children.hide();
    children.slice(0, perPage).show();
    
    pager.find('li .page_link').click(function(){
        var clickedPage = $(this).html().valueOf()-1;
        goTo(clickedPage,perPage);
        return false;
    });
    pager.find('li .prev_link').click(function(){
        previous();
        return false;
    });
    pager.find('li .next_link').click(function(){
        next();
        return false;
    });
    
    function previous(){
        var goToPage = parseInt(pager.data("curr")) - 1;
        goTo(goToPage);
    }
     
    function next(){
        goToPage = parseInt(pager.data("curr")) + 1;
        goTo(goToPage);
    }
    
    function goTo(page){
        var startAt = page * perPage,
            endOn = startAt + perPage;
        
        children.css('display','none').slice(startAt, endOn).show();
        
        if (page>=1) {
            pager.find('.prev_link').show();
        }
        else {
            pager.find('.prev_link').hide();
        }
        
        if (page<(numPages-1)) {
            pager.find('.next_link').show();
        }
        else {
            pager.find('.next_link').hide();
        }
        
        pager.data("curr",page);
      	pager.children().removeClass("active");
        pager.children().eq(page+1).addClass("active");
    
    }
};

$(document).ready(function(){
    
  $('#myTable').pageMe({pagerSelector:'#myPager',showPrevNext:true,hidePageNumbers:false,perPage:4});
    
});

    </script>
    
</body>

</html>